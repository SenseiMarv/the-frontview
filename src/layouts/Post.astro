---
import Header from "../components/posts/Header.astro";
import HeadingLinkSvg from "../components/posts/HeadingLinkSvg.astro";
import Share from "../components/posts/Share.astro";
import { getTags } from "../components/tags/sortTags.js";
import Divider from "../components/utils/Divider.astro";
import Giscus from "../components/utils/Giscus.astro";
import ScrollBar from "../components/utils/ScrollBar.astro";
import type { PostsCollection } from "../content/config.js";
import Layout from "./Layout.astro";

export interface Props {
  frontmatter: PostsCollection["data"];
  readingTime: number;
}

const { frontmatter, readingTime } = Astro.props;

const date = new Date(frontmatter.pubDate).toISOString();
const tags = getTags(frontmatter.tags);
const defaultOpenGraphType = "article";
const defaultOpenGraphImageAlt = "Blogpost cover";
const defaultOpenGraphArticleAuthor = ["Marvin Stickel"];
const defaultTwitterCard = "summary_large_image";
---

<Layout
  title={`${frontmatter.title} | The Frontview`}
  description={frontmatter.description}
  openGraphTitle={frontmatter.title}
  openGraphType={defaultOpenGraphType}
  openGraphImage={frontmatter.imgUrl}
  openGraphImageAlt={defaultOpenGraphImageAlt}
  openGraphArticlePublishedTime={date}
  openGraphArticleAuthor={defaultOpenGraphArticleAuthor}
  openGraphArticleSection={tags[0]}
  openGraphArticleTags={tags}
  twitterCard={defaultTwitterCard}
>
  <ScrollBar />
  <div class="mt-12 md:mt-24">
    <Header
      title={frontmatter.title}
      imgUrl={frontmatter.imgUrl}
      imgAuthor={frontmatter.imgAuthor}
      imgAuthorUrl={frontmatter.imgAuthorUrl}
      pubDate={frontmatter.pubDate}
      tags={frontmatter.tags}
      readingTime={readingTime}
    />
  </div>
  <div class="my-4 md:my-8">
    <Divider noSpacing />
  </div>
  <slot />
  <div class="mt-8 mb-4 md:mt-16 md:mb-8">
    <Divider noSpacing />
  </div>
  <div class="flex justify-center">
    <Share />
  </div>
  <div class="mt-6">
    <Giscus />
  </div>
  <HeadingLinkSvg />
  <style is:global>
    @tailwind base;
    @tailwind components;
    @tailwind utilities;

    @layer components {
      /* Some MDX components cannot be overridden at the time because they would then lose remark/rehype additions or modifications (e.g. automatic addition of links to headings no longer works). */

      /* Styling of headings */

      h1.heading {
        @apply mt-12 mb-6 text-4xl;
      }
      h2.heading {
        @apply mb-4 mt-10 text-3xl;
      }
      h3.heading {
        @apply mb-2 mt-8 text-2xl;
      }
      h4.heading {
        @apply mt-6 mb-1 text-xl;
      }
      h5.heading {
        @apply mt-4 text-lg;
      }
      h6.heading {
        @apply mt-2 text-lg;
      }

      /* Styling of heading links */

      .heading {
        @apply flex items-center;
      }
      .heading a svg {
        @apply invisible w-4 sm:visible;
      }
      .heading a {
        @apply absolute -ml-[1.2rem] w-full max-w-xl cursor-pointer no-underline opacity-0 hover:opacity-100 md:max-w-5xl lg:-ml-6;
      }

      /* Styling of toc links */

      #table-of-contents + ul a {
        @apply text-teal-700 transition-colors duration-300 hover:text-teal-500 hover:underline hover:underline-offset-2 dark:text-teal-300 dark:hover:text-teal-500;
      }

      /* Styling of ul components */

      ul {
        @apply list-disc px-6;
      }

      /* Styling of blockquote components */

      blockquote:not(.tweet-card) {
        @apply my-4 flex flex-col rounded-xl bg-gray-300 p-4 dark:bg-gray-900 sm:flex-row;
      }
      blockquote:not(.tweet-card) > p {
        @apply sm:mt-2;
      }
      blockquote:not(.tweet-card) {
        @apply before:ml-1 before:text-4xl before:text-gray-600 before:content-['“'] before:dark:text-gray-500 sm:before:mr-4;
      }

      /* Styling of tasklist components */
      ul.contains-task-list {
        @apply my-4 list-none p-0;
      }
      li.task-list-item {
        @apply flex items-center gap-3;
      }
      li.task-list-item > input {
        @apply h-4 w-4 appearance-none rounded bg-gray-400 checked:bg-teal-700 dark:checked:bg-teal-500;
      }

      /* Styling of code components (specific to shiki twoslash) */

      :not(.code-container) > code {
        @apply rounded-md bg-gray-800 py-1 px-2 text-white dark:bg-gray-900;
      }

      /* Styling of code block components (specific to shiki twoslash) */

      pre {
        @apply my-4 grid grid-cols-1 content-around rounded-xl !bg-gray-800 dark:!bg-gray-900 md:grid-cols-2;
        grid-template-areas:
          "column-language-id"
          "column-code-title";
      }
      .code-title {
        @apply mt-2 justify-self-start rounded-r-lg bg-gray-500 p-1 px-3 text-white dark:bg-gray-700 md:mt-0 md:mr-4 md:justify-self-end md:rounded-b-lg md:rounded-tr-none;
        grid-area: column-code-title;
      }
      .language-id {
        @apply col-span-2 mt-4 justify-self-start rounded-r-lg bg-teal-700 p-1 px-3 text-white md:mt-0 md:ml-4 md:rounded-b-lg md:rounded-tr-none;
        grid-area: column-language-id;
      }
      .code-title + .language-id {
        @apply col-span-1;
      }
      .code-container {
        @apply col-span-2 overflow-auto py-4;
      }
      .code-container > code {
        @apply flex flex-col flex-wrap;
      }
      .line {
        @apply min-h-[1.5rem] px-4;
      }
      .line.highlight {
        @apply min-h-[1.6rem] border-l-4 border-teal-500 bg-gray-700 dark:border-teal-700 dark:bg-gray-800;
      }
      /* md */
      @media (min-width: 768px) {
        pre {
          grid-template-areas: "column-language-id column-code-title";
        }
      }

      /* Styling of panel components */

      .hint {
        @apply my-4 flex flex-col rounded-xl p-4 sm:flex-row;
      }
      .hint {
        @apply before:mb-2 before:ml-1 sm:before:mr-4 sm:before:mb-0;
      }
      .hint.tip {
        @apply bg-sky-300 before:content-['ℹ️'] dark:bg-sky-900;
      }
      .hint.warn {
        @apply bg-yellow-300 before:content-['❗'] dark:bg-yellow-900;
      }
      .hint.error {
        @apply bg-red-300 before:content-['❌'] dark:bg-red-900;
      }

      /* Styling of table components */

      .table-container {
        @apply my-4 max-w-fit overflow-x-auto rounded-xl;
      }
      th {
        @apply bg-gray-400 px-3 py-2 uppercase dark:bg-gray-700;
      }
      tr {
        @apply odd:bg-gray-300 even:bg-gray-200  dark:odd:bg-gray-900 dark:even:bg-gray-800;
      }
      td {
        @apply min-w-[7rem] whitespace-nowrap px-3 py-2;
      }

      /* Styling of footnote components */

      sup > a {
        @apply p-1 text-teal-700 transition-colors duration-300 hover:text-teal-500 dark:text-teal-300 dark:hover:text-teal-500;
      }

      /* Styling of image components */

      .image-component {
        @apply my-4;
      }

      /* Styling of embedded youtube components */

      lite-youtube {
        @apply m-auto my-4 shadow-xl;
      }

      /* Styling of embedded twitter components */

      .tweet-card {
        @apply m-auto my-4 max-w-md shadow-xl;
      }
    }
  </style>
</Layout>
