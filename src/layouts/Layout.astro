---
import "@fontsource/quicksand";
import "@fontsource/inter";
import "@fontsource/source-code-pro";

// eslint-disable-next-line import/no-unresolved
import { SEO } from "astro-seo";
import defaultTheme from "tailwindcss/defaultTheme";

import Footer from "../components/footer/Footer.astro";
import Header from "../components/header/Header.astro";
import GoogleAnalytics from "../components/utils/GoogleAnalytics.astro";
import Theme from "../components/utils/Theme.astro";

export interface Props {
  title: string;
  description: string;
  openGraphTitle?: string;
  openGraphType?: string;
  openGraphImage?: string;
  openGraphImageAlt?: string;
  openGraphArticlePublishedTime?: string;
  openGraphArticleAuthor?: string[];
  openGraphArticleSection?: string;
  openGraphArticleTags?: string[];
  openGraphTwitterCard?: string;
}

const defaultOpenGraphType = "website";
const defaultOpenGraphImage = "/android-chrome-512x512.png";
const defaultOpenGraphImageAlt = "Website Icon";
const defaultOpenGraphSiteName = "The Frontview";
const defaultOpenGraphTwitterCard = "summary";

const {
  title,
  description,
  openGraphTitle = title,
  openGraphType = defaultOpenGraphType,
  openGraphImage = defaultOpenGraphImage,
  openGraphImageAlt = defaultOpenGraphImageAlt,
  openGraphArticlePublishedTime,
  openGraphArticleAuthor,
  openGraphArticleSection,
  openGraphArticleTags,
  openGraphTwitterCard = defaultOpenGraphTwitterCard,
} = Astro.props;

let openGraph: any = {
  basic: {
    title: openGraphTitle,
    type: openGraphType,
    image: openGraphImage,
  },
  optional: {
    description,
    siteName: defaultOpenGraphSiteName,
  },
  image: {
    alt: openGraphImageAlt,
  },
  twitter: {
    card: openGraphTwitterCard,
  },
};
if (
  openGraphArticlePublishedTime ||
  openGraphArticleAuthor ||
  openGraphArticleSection ||
  openGraphArticleTags
) {
  openGraph = {
    ...openGraph,
    article: {
      publishedTime: openGraphArticlePublishedTime,
      author: openGraphArticleAuthor,
      section: openGraphArticleSection,
      tags: openGraphArticleTags,
    },
  };
}

const headingFontFamily = [
  "Quicksand",
  ...defaultTheme.fontFamily.sans,
].toString();
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth motion-reduce:scroll-auto">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#14b8a6" />
    <meta name="msapplication-TileColor" content="#00aba9" />
    <meta name="theme-color" content="#1f2937" />
    <meta name="generator" content={Astro.generator} />
    <script
      src="https://code.iconify.design/iconify-icon/1.0.1/iconify-icon.min.js"
    ></script>
    <Theme />
    <SEO title={title} description={description} openGraph={openGraph} />
    <GoogleAnalytics />
  </head>
  <body
    class="container mx-auto max-w-xl bg-gray-50 dark:bg-gray-800 dark:text-white md:max-w-5xl"
  >
    <Header />
    <main class="px-3 md:px-6">
      <slot />
      <style>
        body {
          margin: 0;
        }
      </style>

      <style is:global define:vars={{ headingFontFamily }}>
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-family: var(--headingFontFamily);
        }
      </style>
    </main>
    <Footer />
  </body>
</html>
