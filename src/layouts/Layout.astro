---
import "@fontsource/quicksand";
import "@fontsource/inter";
import "@fontsource/source-code-pro";

import { SEO } from "astro-seo";
import defaultTheme from "tailwindcss/defaultTheme";

import Footer from "../components/footer/Footer.astro";
import Header from "../components/header/Header.astro";
import GoogleAnalytics from "../components/utils/scripts/GoogleAnalytics.astro";

export interface Props {
  title: string;
  description?: string;
  openGraphType?: string;
  openGraphImage?: string;
  openGraphImageAlt?: string;
  openGraphArticlePublishedTime?: string;
  openGraphArticleAuthor?: string[];
  openGraphArticleSection?: string;
  openGraphArticleTags?: string[];
}

const defaultDescription =
  "A small personal blog about everything around tech and programming. Author: Marvin Stickel";
const defaultOpenGraphType = "website";
const defaultOpenGraphImage = "/public/favicon.svg";
const defaultOpenGraphImageAlt = "Website Icon";
const defaultOpenGraphSiteName = "The Frontview";
const defaultOpenGraphTwitterCard = "summary_large_image";

const {
  title,
  description = defaultDescription,
  openGraphType = defaultOpenGraphType,
  openGraphImage = defaultOpenGraphImage,
  openGraphImageAlt = defaultOpenGraphImageAlt,
  openGraphArticlePublishedTime,
  openGraphArticleAuthor,
  openGraphArticleSection,
  openGraphArticleTags,
} = Astro.props;

let openGraph: any = {
  basic: {
    title, // It is intentional to use the same title here and as page title
    type: openGraphType,
    image: openGraphImage,
  },
  optional: {
    description,
    siteName: defaultOpenGraphSiteName,
  },
  image: {
    alt: openGraphImageAlt,
  },
  twitter: {
    card: defaultOpenGraphTwitterCard,
  },
};
if (
  openGraphArticlePublishedTime ||
  openGraphArticleAuthor ||
  openGraphArticleSection ||
  openGraphArticleTags
) {
  openGraph = {
    ...openGraph,
    article: {
      publishedTime: openGraphArticlePublishedTime,
      author: openGraphArticleAuthor,
      section: openGraphArticleSection,
      tags: openGraphArticleTags,
    },
  };
}

const headingFontFamily = [
  "Quicksand",
  ...defaultTheme.fontFamily.sans,
].toString();
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth motion-reduce:scroll-auto">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <GoogleAnalytics />
    <SEO title={title} description={description} openGraph={openGraph} />
  </head>
  <body class="container mx-auto max-w-xl bg-gray-800 text-white md:max-w-5xl">
    <Header />
    <main class="px-3 md:px-6">
      <slot />
      <style>
        body {
          margin: 0;
        }
      </style>

      <style is:global define:vars={{ headingFontFamily }}>
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-family: var(--headingFontFamily);
        }
      </style>
    </main>
    <Footer />
  </body>
</html>
