---
import "@fontsource/quicksand";
import "@fontsource/inter";
import "@fontsource/source-code-pro";

// eslint-disable-next-line import/no-unresolved
import { ViewTransitions } from "astro:transitions";
import { SEO } from "astro-seo";
import defaultTheme from "tailwindcss/defaultTheme.js";

import Footer from "../components/footer/Footer.astro";
import Header from "../components/header/Header.astro";
import Analytics from "../components/utils/Analytics.astro";
import Theme from "../components/utils/Theme.astro";

export interface Props {
  title: string;
  description: string;
  openGraphTitle?: string;
  openGraphType?: string;
  openGraphImage?: string;
  openGraphImageAlt?: string;
  openGraphArticlePublishedTime?: string;
  openGraphArticleAuthor?: string[];
  openGraphArticleSection?: string;
  openGraphArticleTags?: string[];
  twitterCard?: string;
}

const defaultOpenGraphType = "website";
const defaultOpenGraphImage = "/android-chrome-512x512.png";
const defaultOpenGraphImageAlt = "Website Icon";
const defaultOpenGraphSiteName = "The Frontview";
const defaultTwitterCard = "summary";

const {
  title,
  description,
  openGraphTitle = title,
  openGraphType = defaultOpenGraphType,
  openGraphImage = defaultOpenGraphImage,
  openGraphImageAlt = defaultOpenGraphImageAlt,
  openGraphArticlePublishedTime,
  openGraphArticleAuthor,
  openGraphArticleSection,
  openGraphArticleTags,
  twitterCard = defaultTwitterCard,
} = Astro.props;

let openGraph: any = {
  basic: {
    title: openGraphTitle,
    type: openGraphType,
    image: openGraphImage,
  },
  optional: {
    description,
    siteName: defaultOpenGraphSiteName,
  },
  image: {
    alt: openGraphImageAlt,
  },
};
if (
  openGraphArticlePublishedTime ??
  openGraphArticleAuthor ??
  openGraphArticleSection ??
  openGraphArticleTags
) {
  openGraph = {
    ...openGraph,
    article: {
      publishedTime: openGraphArticlePublishedTime,
      author: openGraphArticleAuthor,
      section: openGraphArticleSection,
      tags: openGraphArticleTags,
    },
  };
}
let twitter: any = {
  card: defaultTwitterCard,
};
if (twitterCard) {
  twitter = {
    ...twitter,
    card: twitterCard,
  };
}

const headingFontFamily = [
  "Quicksand",
  ...defaultTheme.fontFamily.sans,
].toString();
---

<!doctype html>
<html lang="en" class="scroll-smooth motion-reduce:scroll-auto">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <Theme />
    <script
      src="https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js"
    ></script>
    <Analytics />
    <ViewTransitions />
    <SEO
      title={title}
      description={description}
      openGraph={openGraph}
      twitter={twitter}
    />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#14b8a6" />
    <meta name="msapplication-TileColor" content="#00aba9" />
    <meta name="theme-color" content="#1f2937" />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body
    class="container mx-auto max-w-2xl bg-gray-50 dark:bg-gray-800 dark:text-white md:max-w-5xl xl:max-w-5xl 2xl:max-w-5xl"
  >
    <Header />
    <main class="px-3 md:px-6">
      <slot />
      <style>
        body {
          margin: 0;
        }
      </style>

      <style is:global define:vars={{ headingFontFamily }}>
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-family: var(--headingFontFamily);
        }
      </style>
    </main>
    <Footer />
    <style is:global>
      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      @layer components {
        /* Some MDX components cannot be overridden at the time because they would then lose remark/rehype additions or modifications (e.g. automatic addition of links to headings no longer works). */

        /* Styling of headings */

        h1.heading {
          @apply mb-6 mt-12 text-4xl;
        }
        h2.heading {
          @apply mb-4 mt-10 text-3xl;
        }
        h3.heading {
          @apply mb-2 mt-8 text-2xl;
        }
        h4.heading {
          @apply mb-1 mt-6 text-xl;
        }
        h5.heading {
          @apply mt-4 text-lg;
        }
        h6.heading {
          @apply mt-2 text-lg;
        }

        /* Styling of heading links */

        .heading {
          @apply flex items-center active:text-teal-400 active:duration-100 dark:active:text-teal-700;
        }
        .heading a svg {
          @apply invisible w-4 sm:visible;
        }
        .heading a {
          @apply absolute -ml-[1.2rem] w-full max-w-xl cursor-pointer no-underline opacity-0 hover:opacity-100 md:max-w-5xl lg:-ml-6;
        }

        /* Styling of toc links */

        #table-of-contents + ul a {
          @apply text-teal-700 transition-colors duration-300 hover:text-teal-500 hover:underline hover:underline-offset-2 active:!text-teal-400 active:duration-100 dark:text-teal-300 dark:hover:text-teal-500 dark:active:!text-teal-700;
        }

        /* Styling of ul components */

        ul {
          @apply !list-disc !px-6;
        }

        /* Styling of blockquote components */

        blockquote:not(.tweet-card) {
          @apply my-4 flex flex-col rounded-xl bg-gray-300 p-4 dark:bg-gray-900 sm:flex-row;
        }
        blockquote:not(.tweet-card) > p {
          @apply sm:mt-2;
        }
        blockquote:not(.tweet-card) {
          @apply before:ml-1 before:text-4xl before:text-gray-600 before:content-['“'] before:dark:text-gray-500 sm:before:mr-4;
        }

        /* Styling of tasklist components */
        ul.contains-task-list {
          @apply my-4 list-none p-0;
        }
        li.task-list-item {
          @apply flex items-center gap-3;
        }
        li.task-list-item > input {
          @apply h-4 w-4 appearance-none rounded bg-gray-400 checked:bg-teal-700 dark:checked:bg-teal-500;
        }

        /* Styling of code components (specific to shiki twoslash) */

        :not(.code-container) > code {
          @apply rounded-md bg-gray-800 px-2 py-1 text-white dark:bg-gray-900;
        }

        /* Styling of code block components (specific to shiki twoslash) */

        pre {
          @apply my-4 grid grid-cols-1 content-around rounded-xl !bg-gray-800 dark:!bg-gray-900 md:grid-cols-2;
          grid-template-areas:
            "column-language-id"
            "column-code-title";
        }
        .code-title {
          @apply mt-2 justify-self-start rounded-r-lg bg-gray-500 p-1 px-3 text-white dark:bg-gray-700 md:mr-4 md:mt-0 md:justify-self-end md:rounded-b-lg md:rounded-tr-none;
          grid-area: column-code-title;
        }
        .language-id {
          @apply col-span-2 mt-4 justify-self-start rounded-r-lg bg-teal-700 p-1 px-3 text-white md:ml-4 md:mt-0 md:rounded-b-lg md:rounded-tr-none;
          grid-area: column-language-id;
        }
        .code-title + .language-id {
          @apply col-span-1;
        }
        .code-container {
          @apply col-span-2 overflow-auto py-4;
        }
        .code-container > code {
          @apply flex flex-col flex-wrap;
        }
        .line {
          @apply min-h-[1.5rem] px-4;
        }
        .line.highlight {
          @apply min-h-[1.6rem] border-l-4 border-teal-500 bg-gray-700 dark:border-teal-700 dark:bg-gray-800;
        }
        /* md */
        @media (min-width: 768px) {
          pre {
            grid-template-areas: "column-language-id column-code-title";
          }
        }

        /* Styling of panel components */

        .hint {
          @apply my-4 flex flex-col rounded-xl p-4 sm:flex-row;
        }
        .hint {
          @apply before:mb-2 before:ml-1 sm:before:mb-0 sm:before:mr-4;
        }
        .hint.tip {
          @apply bg-sky-300 before:content-['ℹ️'] dark:bg-sky-900;
        }
        .hint.warn {
          @apply bg-yellow-300 before:content-['❗'] dark:bg-yellow-900;
        }
        .hint.error {
          @apply bg-red-300 before:content-['❌'] dark:bg-red-900;
        }

        /* Styling of table components */

        .table-container {
          @apply my-4 max-w-fit overflow-x-auto rounded-xl;
        }
        th {
          @apply bg-gray-400 px-3 py-2 uppercase dark:bg-gray-700;
        }
        tr {
          @apply odd:bg-gray-300 even:bg-gray-200  dark:odd:bg-gray-900 dark:even:bg-gray-800;
        }
        td {
          @apply min-w-[7rem] whitespace-nowrap px-3 py-2;
        }

        /* Styling of footnote components */

        sup > a {
          @apply p-1 text-teal-700 transition-colors duration-300 hover:text-teal-500 active:!text-teal-400 active:duration-100 dark:text-teal-300 dark:hover:text-teal-500 dark:active:!text-teal-700;
        }
        .data-footnote-backref {
          @apply text-teal-700 transition-colors duration-300 hover:text-teal-500 active:!text-teal-400 active:duration-100 dark:text-teal-300 dark:hover:text-teal-500 dark:active:!text-teal-700;
        }

        /* Styling of image components */

        .image-component {
          @apply my-4;
        }
      }
    </style>
  </body>
</html>
