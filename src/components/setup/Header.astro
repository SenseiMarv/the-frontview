---
import { formatDateToLocaleDate } from "../utils/formatDates";
import Icon from "../utils/Icon.astro";
import Share from "../utils/Share.astro";

export interface Props {
  title: string;
  pubDate: string;
  upDate?: string;
  readingTime: number;
}

const { title, pubDate, upDate, readingTime } = Astro.props;

const formattedPubDate = formatDateToLocaleDate(new Date(pubDate));
const formattedUpDate = upDate
  ? formatDateToLocaleDate(new Date(upDate))
  : undefined;
const formattedReadingTime = `${readingTime} min read`;
---

<div class="flex flex-col items-center">
  <h2 class="text-3xl leading-snug md:text-4xl" transition:name="setup">
    My Setup
  </h2>
  <h1
    class="text-5xl leading-snug md:text-6xl"
    transition:name={`setup-title-${title}`}
  >
    {title}
  </h1>
  <div
    class={`mt-4 flex flex-col items-center gap-1 whitespace-nowrap text-lg leading-snug text-gray-500 md:mt-6 md:text-xl dark:text-gray-400 ${
      formattedUpDate ? "md:flex-row" : "sm:flex-row"
    }`}
  >
    <div class="flex items-center gap-1 whitespace-normal">
      <Icon
        iconSet="fluent-emoji-high-contrast"
        name="tear-off-calendar"
        classString="w-5 h-5"
      />
      {formattedPubDate}
      {formattedUpDate && <> (Updated: {formattedUpDate})</>}
      <div
        class={`hidden ${
          formattedUpDate ? "md:inline-block" : "sm:inline-block"
        }`}
      >
        |
      </div>
    </div>
    <div class="flex gap-1">
      <Icon
        iconSet="fluent-emoji-high-contrast"
        name="eight-oclock"
        classString="w-5 h-5"
      />
      {formattedReadingTime}
    </div>
  </div>
  <div class="mt-4 md:mt-8">
    <Share />
  </div>
</div>
